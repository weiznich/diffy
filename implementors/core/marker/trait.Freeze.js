(function() {var implementors = {};
implementors["diffy"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.ApplyError.html\" title=\"struct diffy::ApplyError\">ApplyError</a>","synthetic":true,"types":["diffy::apply::ApplyError"]},{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.DiffOptions.html\" title=\"struct diffy::DiffOptions\">DiffOptions</a>","synthetic":true,"types":["diffy::diff::DiffOptions"]},{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.MergeOptions.html\" title=\"struct diffy::MergeOptions\">MergeOptions</a>","synthetic":true,"types":["diffy::merge::MergeOptions"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"diffy/struct.Hunk.html\" title=\"struct diffy::Hunk\">Hunk</a>&lt;'a&gt;","synthetic":true,"types":["diffy::patch::Hunk"]},{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.HunkRange.html\" title=\"struct diffy::HunkRange\">HunkRange</a>","synthetic":true,"types":["diffy::patch::HunkRange"]},{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.ParsePatchError.html\" title=\"struct diffy::ParsePatchError\">ParsePatchError</a>","synthetic":true,"types":["diffy::patch::parse::ParsePatchError"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"diffy/struct.Patch.html\" title=\"struct diffy::Patch\">Patch</a>&lt;'a&gt;","synthetic":true,"types":["diffy::patch::Patch"]},{"text":"impl Freeze for <a class=\"struct\" href=\"diffy/struct.PatchFormatter.html\" title=\"struct diffy::PatchFormatter\">PatchFormatter</a>","synthetic":true,"types":["diffy::patch::format::PatchFormatter"]},{"text":"impl Freeze for <a class=\"enum\" href=\"diffy/enum.ConflictStyle.html\" title=\"enum diffy::ConflictStyle\">ConflictStyle</a>","synthetic":true,"types":["diffy::merge::ConflictStyle"]},{"text":"impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"diffy/enum.Line.html\" title=\"enum diffy::Line\">Line</a>&lt;'a&gt;","synthetic":true,"types":["diffy::patch::Line"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()